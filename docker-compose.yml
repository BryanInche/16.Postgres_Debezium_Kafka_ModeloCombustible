version: '3.9'

services:
  # Servicio de Zookeeper (gestiona metadatos para Kafka)
  zookeeper:
    container_name: zookeeper
    image: docker.io/bitnami/zookeeper:3.7
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  # Servicio de Kafka (mensajería distribuida)
  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:2
    ports:
      - "9092:9092"   # Puerto interno de Kafka 
      - "29092:29092" # Puerto para conexiones externas
    environment:
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNALPLAINTEXT://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNALPLAINTEXT://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNALPLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=EXTERNALPLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper  # Kafka solo se inicia si Zookeeper está corriendo
  
  # Servicio de Postgress
  postgres:
    container_name: postgres
    image: postgres:14-alpine # Usa la imagen oficial de PostgreSQL versión 14
    environment:
      POSTGRES_USER: postgres_bryan 
      POSTGRES_PASSWORD: postgres_simple
      POSTGRES_DB: postgresdb
      PGDATA: /data/postgres
    ports:
      - "5436:5432" # puerto expone : puerto recibe
    command: [ "postgres", "-c", "wal_level=logical", "-c", "max_wal_senders=1" , "-c", "max_replication_slots=1" ]
    #wal_level=logical → Habilita la replicación lógica, necesaria para Debezium.
    #max_wal_senders=1 → Permite 1 conexión de replicación.
    #max_replication_slots=1 → Define 1 ranura de replicación para rastrear los cambios.
    restart: unless-stopped

  debezium:
    container_name: debezium
    image: debezium/connect:2.7.3.Final  #imagen oficial de Debezium, que es un conector basado en Kafka Connect.
    environment:
      GROUP_ID: 1   # Define el ID del grupo de consumidores 
      CONFIG_STORAGE_TOPIC: my-connect-configs # Usa el topic my-connect-configs en Kafka para almacenar configuraciones.
      OFFSET_STORAGE_TOPIC: my-connect-offsets # Usa el topic my-connect-offsets para almacenar offsets de los cambios detectados.
      BOOTSTRAP_SERVERS: kafka:9092 # Indica que Kafka está disponible en kafka:9092
      ADVERTISED_HOST_NAME: debezium # Anuncia su hostname como debezium, útil para otros servicios dentro de Docker.
    ports:
      - "8083:8083" #Expone Debezium en el puerto 8083
    depends_on:
      - kafka   #Asegura que Kafka esté corriendo antes de iniciar Debezium
      

